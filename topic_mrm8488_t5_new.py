# -*- coding: utf-8 -*-
"""mrm8488_t5_new.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WUuoflJd8uI3vfeeZbBTPhdkRwyT8EgG
"""

!pip install sentencepiece
!pip install --upgrade tokenizer

!pip uninstall -y transformers tokenizers
!pip install transformers tokenizers

from transformers import AutoTokenizer, AutoModelForSeq2SeqLM

# Load the tokenizer and model
model_name = "mrm8488/t5-base-finetuned-news-title-classification"
tokenizer = AutoTokenizer.from_pretrained("mrm8488/t5-base-finetuned-news-titles-classification")
model = AutoModelForSeq2SeqLM.from_pretrained("mrm8488/t5-base-finetuned-news-titles-classification")

!pip install transformers torch

import torch
import pandas as pd

import warnings
warnings.filterwarnings('ignore')

def topic(text):
  input_ids = tokenizer.encode(title, return_tensors='pt').to(model.device)
  outputs = model.generate(input_ids=input_ids)
  output_text = tokenizer.decode(outputs[0], skip_special_tokens=True)
  return output_text

input_file_path = r'/content/news_with_content_2.csv'
output_file_path = r'/content/news_with_content_with_topic_3.csv'

import csv

rows_with_topic = []
count = 1

# open the input CSV file and read each row
with open(input_file_path, 'r') as infile:
    reader = csv.reader(infile)
    header = next(reader)
    header.append('topic')
    # iterate over each row in the data frame and add the topics
    for row in reader:
        title = row[2]
        row.append(topic(title))
        print(f"Completed for row {count}")
        count = count + 1
        rows_with_topic.append(row)

# write the updated data frame to a new CSV file
with open(output_file_path, 'w', newline='') as outfile:
    writer = csv.writer(outfile)
    writer.writerow(header)

    for row in rows_with_topic:
        writer.writerow(row)

df = pd.read_csv('/content/indian_news_more_with_content_topic.csv')

df.head(20)

