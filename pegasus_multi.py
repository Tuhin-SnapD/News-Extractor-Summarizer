# -*- coding: utf-8 -*-
"""pegasus multi.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ni8qffaPD5b0LCORS1aRPzBzvi8salsC
"""

!pip install transformers

!pip install sentencepiece

import pandas as pd
from transformers import PegasusForConditionalGeneration, PegasusTokenizer, AutoTokenizer

# Load the CSV file
df = pd.read_csv('health.csv')

# Extract the full content from the 5th column
documents = df.iloc[:, 4].tolist()

# Load Pegasus model and tokenizer
model_name = 'google/pegasus-multi_news'
tokenizer = AutoTokenizer.from_pretrained(model_name)
model = PegasusForConditionalGeneration.from_pretrained(model_name)

# Tokenize the documents
batch = tokenizer(documents, truncation=True, padding='longest', return_tensors='pt')

# Generate the summaries
summary_ids = model.generate(
    batch['input_ids'],
    num_beams=4,
    length_penalty=2.0,
    early_stopping=True
)

#  Decode the summaries
summaries = [tokenizer.decode(g, skip_special_tokens=True, clean_up_tokenization_spaces=False) for g in summary_ids]

# Write the summaries to a text file
with open('health.txt', 'w') as f:
    for summary in summaries:
        f.write(summary + '\n')

import csv

with open('health.csv', 'r') as csvfile:
    reader = csv.reader(csvfile)
    column_content = [row[5] for row in reader]

with open('health2.txt', 'a') as txtfile:
    for content in column_content:
        txtfile.write(content + '\n')

